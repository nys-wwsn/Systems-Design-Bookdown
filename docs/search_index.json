[["index.html", "Systems Design for Wastewater Surveillance: Information Guide and Training Resources Chapter 1 Introduction 1.1 Contact information", " Systems Design for Wastewater Surveillance: Information Guide and Training Resources Dustin T. Hill, Shaz Damani, David A. Larsen, and contributions from the New York State Wastewater Surveillance Program 2025-05-12 Chapter 1 Introduction Authors: Dustin T. Hill, Shaz Damani, and David A. Larsen with contributions from the New York State Wastewater Surveillance Network. Welcome to this comprehensive guide designed to enhance and strengthen your wastewater surveillance activities. This document serves as a valuable resource to complement the monthly workshops hosted by the New York Center of Excellence (NY CoE) during our regional calls. Within these pages, you will find essential information, resources, and practical tips to support your efforts in wastewater monitoring. We encourage you to refer to this guide as you embark on or continue your surveillance initiatives. Should you encounter any difficulties accessing the provided links, require additional one-on-one assistance, or have general inquiries, please do not hesitate to reach out to us. We are here to support you in successfully implementing and expanding your wastewater surveillance strategies. This guide will focus on Systems Design for wastewater surveillance and cover the following topics: Part 1: How New York State mapped their sewersheds In Part 1, you will learn about how NYS mapped their sewersheds. The methods can be applied to other jurisdictions looking to produce maps of sewershed boundaries to aid wastewater surveillance for epidemiology. Part 2: Maps and spatial data for communities connected to public sewer In Part 2, we will review existing maps for community sewer systems and how to make them for areas that might be missing them. While there is a plethora of digital spatial data on many topics, there is not yet a comprehensive national database for sewers in the United States (US). Using primarily public records, we show how to take an initial inventory of municipal WWTPs as a starting point for mapping a jurisdictions sewer systems. Part 3: Adding Census Data to Wastewater-Based Epidemiology Part 3, we explore how to incorporate United States Census (US Census) data, which can add population demographic variables, to WBE data. I will discuss how to integrate spatial census data to spatial WBE data. Part 4: Adding other spatial data to WBE In Part 4, we explore how to add other spatial data to WBE projects including zip codes and point data. Part 5: System design for outbreak detection In this last part of our Systems Design review, we share ways to understand an outbreak using wastewater surveillance data. Examples for some pathogens are provided as case studies. This info guide will also include a comprehensive list of videos, links to data, and other resources in the Resources and Links section. 1.1 Contact information New York State Center of Excellence Website: https://nywastewatcher.io/nwsscoe. General concerns email: WasteWaterNetwork@health.ny.gov. "],["how-new-york-state-mapped-their-sewersheds.html", "Chapter 2 How New York State mapped their sewersheds 2.1 Background 2.2 Goals for this section 2.3 Resources", " Chapter 2 How New York State mapped their sewersheds 2.1 Background In 2020, as part of the emergency response to the COVID-19 pandemic, a pilot wastewater surveillance project was initiated by NYS Department of Health (NYS DOH) and Syracuse University. As part of this pilot, maps were collected for participating wastewater treatment plants (WWTPs). These maps were the initial database of NYS sewersheds and the process used to create them formed the template for mapping all of the states sewersheds for each wastewater treatment plant (2.1). Figure 2.1: Sampling Sites in New York State (2024) In 2021, as part of the scale-up of wastewater surveillance in New York, NYS DOH funded a project to map all of the sewersheds in the state. Using contact information for the states WWTP operators, a survey was conducted to assess what data already existed for sewershed maps. Geospatial information systems (GIS) digital data were collected from sites that had mapped their systems. In addition, copies of physical maps, photos of maps, address lists for properties connected to sewers, tax rolls, and state digitized parcel records were collected to aid in the mapping effort. All of New Yorks Sewersheds were mapped regardless of whether the site was selected to participate in the ongoing surveillance projects (2.2) Figure 2.2: New York State Municipal Sewersheds In this section, you will learn about how NYS mapped their sewersheds and the open-source methods that were used. This overview will be referenced in future sections and the methods can be applied to other jurisdictions looking to produce maps of sewershed boundaries to aid wastewater surveillance for epidemiology. 2.2 Goals for this section Learn about the process that NYS used to map sewersheds. Identify methods used to address challenges in mapping and producing best estimates for sewershed boundaries. Learn how NYS is using sewershed boundaries to enhance the utility of wastewater epidemiology. 2.3 Resources Video powerpoint for how NY created sewersheds. Hill, D, Larsen, DA. 2023. Using geographic information systems to link population estimates to wastewater surveillance data in New York State, USA. PLOS Global Public Health. The paper explains the process for mapping all of NYSs sewersheds including data collection, processing, and estimating population estimates for each sewershed. NYS sewershed data (ArcGIS online download). Access and download NYS sewershed data to see how data are recorded. NYS sewershed data (GitHub data download). Access and download NYS sewershed data directly into your R session. NYS sewershed data viewer. Visually inspect NYS sewersheds and the population served by each. The page includes example code for downloading and adding population data to sewershed shapefiles in the program R. Using the Editor toolbar in ArcGIS. ArcGIS can be an excellent way to digitally edit spatial data. R spatial tools. R is an open-source program, and most mapping projects and analyses can be completed using the software. "],["maps-and-spatial-data-for-communities-connected-to-public-sewer.html", "Chapter 3 Maps and spatial data for communities connected to public sewer 3.1 Overview 3.2 Goals for this section 3.3 Resources 3.4 Training exercise 3.5 Training review", " Chapter 3 Maps and spatial data for communities connected to public sewer 3.1 Overview In this section, we will review existing maps for community sewer and how to go about making them. While there is a plethora of digital spatial data on many topics, there is not yet a comprehensive national database for sewers in the United States (US). Prior to the NYS DOH sewershed mapping project, there was also not a comprehensive map of NYs sewer systems. There are, however, some public databases for locations of publicly owned treatment works including permitted wastewater treatment plants. The US Environmental Protection Agency (EPA) maintains records on permitted WWTPs and so do most state environmental offices. Using these public records, we know where the municipal WWTPs are and this provides a starting point for mapping a states sewer systems. The next step involves collecting data from other sources like: State tax parcel records Municipal records for local sewer taxes WWTP infrastructure maps or engineering design County or local planning documents Location of manholes or sewer mains Lists of addresses for properties that report paying a sewer tax Many of these records will be housed in local GIS, tax, planning, or municipal offices. Some will be public, and others might require permission to access or data use agreements. The final product of mapping a states sewer systems does not result in any identifiable data being produced, and if you explain to local officials the goals of the project and what the final product will look like, data sharing should not be an issue. Work with your local partners to ensure that their questions are answered, and any concerns are addressed. 3.2 Goals for this section In this section, you will: Review an example sewershed parcel mapping exercise for one county in New York State Explore loading and manipulating maps in ArcGIS and R Gather data on your states WWTP locations Contact local offices, WWTP operators, and others to gather data on sewer locations Gather parcel property data for your jurisdiction 3.3 Resources National parcel data viewer / data access portal. This is a data portal that lets you explore each state in the US and whether they have tax parcel data. Some links bring you to county or state websites and from there you can view and download the data. ArcGIS tutorials Loading data into Arc Add point data from a table Using the Editor tool Save your shapefile Q GIS tutorials Downloading Q Add polygon data to Q Add point data from a table Edit data in Q Split multipart polygons Save your data in Q 3.4 Training exercise This training will show how to use publicly available tax parcel data to draw municipal sewershed boundaries. You will need to download R to run this script on your machine. For this example, we are going to map sewersheds in Onondaga County, NY. Sewersheds are the area of land that a wastewater treatment plant (WWTP) serves and include public and private properties. Many states, including NY, keep track of residential and commercial sewer access in their state tax records. We will use data downloaded from the NYS Tax Parcel system for Onondaga county. You can access the file for Onondaga County at the following location: NYS Tax Parcel Data. These data are very large, so for the purposes of this tutorial, I have already downloaded the data and filtered for Onondaga County. You will also need a list of the municipal wastewater treatment plants for Onondaga County. NYS keeps a record of all permitted WWTPs in the state. You can download the file here. We will be able to use these data to: Map WWTPs in Onondaga County, NY Select parcels that are on public sewer Link groups of parcels to the town or village they are within Estimate sewershed locations for nearby WWTPs A note before proceeding: Parcel data are very large and your R session might slow down during some processing steps. 3.4.0.1 Data you will need for this tutorial You will need to download the following data files for this tutorial (they are stored with this tutorial). Onondaga County tax parcels NYS WWTP list NY county boundaries NY town boundaries NY village boundaries 3.4.1 Step 1 - Install and load the necessary R packages Install packages to your computer. install.packages(&quot;gridExtra&quot;) install.packages(&quot;nngeo&quot;) install.packages(&quot;sf&quot;) install.packages(&quot;dplyr&quot;) install.packages(&quot;ggplot2&quot;) install.packages(&quot;tigris&quot;) Load packages into your current R session. library(gridExtra) library(nngeo) library(sf) library(dplyr) library(ggplot2) library(tigris) 3.4.2 Step 2 - Load the data into your R session # Onondaga county tax parcels onondaga_parcels &lt;- st_read(&quot;E:/Data/ny_parcels/onondaga_2020_Tax_Parcels_SHP_2106/onondaga_2020_Tax_Parcels_SHP_2106.shp&quot;) # NY WWTPS ny_wwtps &lt;- read.csv(&quot;data/Wastewater_Treatment_Plants_20250121.csv&quot;) # NY county boundaries - for assistance with mapping ny_counties &lt;- st_read(&quot;E:/Dropbox/CEMI/Wastewater/Data/NYS_Civil_Boundaries.shp/Counties_Shoreline.shp&quot;) # Filter for Onondaga county onondaga_border &lt;- ny_counties %&gt;% filter(NAME == &quot;Onondaga&quot;) # nys town, city, village boundaries towns &lt;- st_read(&quot;E:/Dropbox/CEMI/Wastewater/Data/NYS_Civil_Boundaries.shp/Cities_Towns.shp&quot;) # Onondaga towns onondaga_towns &lt;- towns %&gt;% filter(COUNTY == &quot;Onondaga&quot;) # villages villages &lt;- st_read(&quot;E:/Dropbox/CEMI/Wastewater/Data/NYS_Civil_Boundaries.shp/Villages.shp&quot;) # Onondaga villages onondaga_villages &lt;- villages %&gt;% filter(COUNTY == &quot;Onondaga&quot;) 3.4.3 Step 3 - Filter the WWTP data for municipal sites only # municipal sites only wwtp_mun &lt;- ny_wwtps %&gt;% filter(Plant.Type == &quot;Municipal&quot;) # make the data spatial for mapping purposes using the coordinates in the file wwtp_mun_sf &lt;- st_as_sf(wwtp_mun, coords = c(&quot;Longitude&quot;, &quot;Latitude&quot;), crs = &quot;+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84&quot;) # transform to the same CRS as the Onondaga parcels wwtp_mun_sf &lt;- st_transform(wwtp_mun_sf, st_crs(onondaga_border)) # filter for Onondaga plants only using st_intersection wwtp_onondaga_sf &lt;- st_intersection(wwtp_mun_sf, onondaga_border) # Map out the plants ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = onondaga_towns, fill = &quot;dodgerblue&quot;, color = &quot;white&quot;)+ geom_sf(data = onondaga_villages, fill = &quot;orange&quot;, color = &quot;white&quot;)+ geom_sf(data = wwtp_onondaga_sf, color = &quot;black&quot;, size = 3)+ theme_void() We can see that many WWTPs fall within village or town boundaries. This should help us differentiate the plants that serve different communities. We can also ask the municipalities and local WWTP operators to learn more, but for now, let us assume that we are not sure. 3.4.4 Step 4 - Filter the parcel data for public sewer only There are two fields in the data for sewer. One is the SEWER_TYPE and the other is SEWER_DESC. SEWER_DESC includes three categories: Comm/public, None, or Private. We will filter for the Comm/public sewer parcels only. # filter for public sewer parcels table(onondaga_parcels$SEWER_DESC) ## ## Comm/public None Private ## 138461 11440 30452 onondaga_sewer &lt;- onondaga_parcels %&gt;% filter(SEWER_DESC == &quot;Comm/public&quot;) # plot the parcel data # NOTE - this will take a moment, there are over 100,000 records ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = onondaga_towns, fill = &quot;dodgerblue&quot;, color = &quot;white&quot;)+ geom_sf(data = onondaga_villages, fill = &quot;orange&quot;, color = &quot;white&quot;)+ geom_sf(data = onondaga_sewer, color = NA, alpha = 0.5)+ geom_sf(data = wwtp_onondaga_sf, color = &quot;black&quot;, size = 3)+ theme_void()+ labs(title = &quot;Onondaga county parcels connected to public sewer&quot;) 3.4.5 Step 5 - Link sewer parcels to towns and villages # cut out the village boundaries from the towns town_no_village &lt;-st_difference(onondaga_towns, st_combine(onondaga_villages)) # intersect the villages/towns with the sewer parcels sewer_town_intersection &lt;- st_intersection(onondaga_sewer, town_no_village) sewer_village_intersection &lt;- st_intersection(onondaga_sewer, onondaga_villages) # group by town / village unit and dissolve # Note we are using a buffer to help remove extra spaces and lines between # parcels # first we buffer dissolved_towns &lt;- sewer_town_intersection %&gt;% st_as_sf() %&gt;% st_buffer(100) # then dissolve dissolved_towns &lt;- dissolved_towns %&gt;% group_by(NAME) %&gt;% # name of the town summarise() %&gt;% ungroup() # remove the buffer distance dissolved_towns &lt;- dissolved_towns %&gt;% st_buffer(-100) # villages # first we buffer dissolved_villages &lt;- sewer_village_intersection %&gt;% st_as_sf() %&gt;% st_buffer(100) # then dissolve dissolved_villages &lt;- dissolved_villages %&gt;% group_by(NAME) %&gt;% summarise() %&gt;% ungroup() # remove the buffer distance dissolved_villages &lt;- dissolved_villages %&gt;% st_buffer(-100) # plot to see how they look ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = dissolved_towns, color = &quot;white&quot;, aes(fill = `NAME`))+ geom_sf(data = dissolved_villages, color = &quot;white&quot;, aes(fill = `NAME`))+ geom_sf(data = wwtp_onondaga_sf, size = 3, color = &quot;black&quot;)+ theme_void()+ theme(legend.position = &quot;none&quot;) We now have two layers, parcels in each town or city that are on sewer and parcels in each village that are on sewer. The next step can be to take these data to a local county planning office and identify which town sewer systems go to each plant, then group the polygons to create the sewershed for that plant. Alternatively, lets do a little more work to make that next step easier. You will notice there are a lot of wayward parcels (parcels that are not near any WWTP or town and look like small islands). They likely flow into nearby systems a little ways off. Also, there are a lot of holes in the parcel groups. We will fill in those holes and then intersect the town and village sewer parcels with census blocks to get more robust geometries for the sewersheds. These steps will make using these data for epidemiology a little easier. If you want to keep the more skeletal boundaries for sewers, you can save that data for future reference. 3.4.5.1 Clean up sewershed boundaries # remove holes dissolved_towns_filled &lt;- nngeo::st_remove_holes(dissolved_towns) dissolved_villages_filled &lt;- nngeo::st_remove_holes(dissolved_villages) sewer_parcel_plot &lt;- ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = dissolved_towns_filled, color = &quot;white&quot;, aes(fill = NAME))+ geom_sf(data = dissolved_villages_filled, color = &quot;white&quot;, aes(fill = NAME))+ geom_sf(data = wwtp_onondaga_sf, size = 3, color = &quot;black&quot;)+ labs(title = &quot;Town and village parcels that are on sewer&quot;)+ theme_void()+ theme(legend.position = &quot;none&quot;, plot.title = element_text(hjust = 0.5)) sewer_parcel_plot 3.4.6 Step 6 - Assign polygons to WWTPs We want to now bring our village and town parcel polygons together into one shapefile layer and link the polygons to the nearest WWTP. # combine village and town parcels into on R data object village_town_sewer &lt;- bind_rows( dissolved_towns_filled, dissolved_villages_filled ) # assign each polygon to a point based on proximity near &lt;- st_nearest_feature(village_town_sewer, wwtp_onondaga_sf) # using the row numbers for the nearest feature, we can begin to create some # sewershed boundaries wwtp_onondaga_sf$wwtp_row_id &lt;- seq(1:nrow(wwtp_onondaga_sf)) village_town_sewer$parcel_row_id &lt;- seq(1:nrow(village_town_sewer)) # combine the list of near wwtps with the Onondaga sewer dataset near_df &lt;- as.data.frame(cbind(village_town_sewer, near)) # rename near value to be the wwtp_row_id near_df$wwtp_row_id &lt;- near_df$near # to avoid extra &quot;lines&quot; in our dissolved polygons, we buffer the parcels first # first we buffer dissolved &lt;- near_df %&gt;% st_as_sf() %&gt;% st_buffer(10) # then dissolve dissolved &lt;- dissolved %&gt;% group_by(wwtp_row_id) %&gt;% summarise() %&gt;% ungroup() # remove the buffer distance dissolved &lt;- dissolved %&gt;% st_buffer(-10) # add the wwtp metadata onondaga_meta &lt;- wwtp_onondaga_sf %&gt;% st_drop_geometry() dissolved &lt;- dissolved %&gt;% left_join(onondaga_meta, by = c(&quot;wwtp_row_id&quot;)) # plot to see how they look ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = dissolved, color = &quot;darkblue&quot;, aes(fill = `Facility.Name`))+ geom_sf(data = wwtp_onondaga_sf, size = 3, color = &quot;black&quot;)+ theme_void()+ theme(legend.position = &quot;bottom&quot;)+ guides(fill = guide_legend(nrow = 4, byrow=TRUE))+ scale_fill_manual(values = MetBrewer::met.brewer(name = &quot;Nizami&quot;, n = 11), labels = function(x) stringr::str_wrap(x, width = 15)) We can save these R objects as shapefiles. st_write(dissolved_towns_filled, dsn = &quot;data/onondaga town sewer parcels/onondaga town sewer parcels.shp&quot;) st_write(dissolved_villages_filled, dsn = &quot;data/onondaga village sewer parcels/onondaga village sewer parcels.shp&quot;) st_write(dissolved, dsn = &quot;data/town village sewer parcels/town village sewer parcels.shp&quot;) 3.5 Training review We have used publicly available tax parcel data to estimate sewersheds for municipal WWTPs in Onondaga County, NY. The boundaries are not exact nor are they complete. You will need to work with local planning offices to improve the boundary estimates and finalize assigning each polygon to the WWTP that they flow into. Some additional data you might gather to create the final boundaries include municipal tax roles, municipal sewer infrastructure maps or GIS data, or your tax parcel data might have what in NY is called a Special Districts table. 3.5.1 Appendix 1 - Special districts The Special Districts table is a dataset that includes more detail on each tax parcel like what water and fire district the parcel is part of. These tables are not always publicly available and you might need permission to work with these data. If you can obtain these data, you can merge the special districts to the parcel data using the municipal tax parcel ID, and then group and filter by special district names for sewer districts. Not all special district table will have sewer data, but many will. 3.5.2 Appendix 2 - create polygons using census blocks We can also draw sewershed boundaries using census blocks. By intersecting census blocks with sewer parcels, we can map the parts of each town and village on sewer. An advantage to including the entire block that intersects with a sewershed parcel is that it will make merging these data with census population data easier in the future. Obtaining accurate population estimates for the number of people on sewer is an important part of wastewater-based epidemiology. 3.5.2.1 Download censusblocks for NYS b &lt;- tigris::blocks(state = &quot;New York&quot;, county = &quot;Onondaga&quot;, year = 2020) # blocks that intersect with town sewer parcels # transform crs to match b &lt;- st_transform(b, st_crs(dissolved_towns_filled)) town_sewer_b &lt;- st_intersects(b, dissolved_towns_filled) town_sewer_b &lt;- as.data.frame(town_sewer_b) # blocks that intersect with village sewer parcels village_sewer_b &lt;- st_intersects(b, dissolved_villages_filled) village_sewer_b &lt;- as.data.frame(village_sewer_b) # add row ids and then select for row ids in the intersection b$b_row_id &lt;- seq(1:nrow(b)) village_sewer_blocks &lt;- b %&gt;% filter(b_row_id %in% village_sewer_b$row.id) town_sewer_blocks &lt;- b %&gt;% filter(b_row_id %in% town_sewer_b$row.id) # add town / village sewer dissolved_towns_filled$town_id &lt;- seq(1:nrow(dissolved_towns_filled)) dissolved_villages_filled$village_id &lt;- seq(1:nrow(dissolved_villages_filled)) village_sewer_b &lt;- village_sewer_b %&gt;% rename(village_id = col.id, b_row_id = row.id) %&gt;% left_join(dissolved_villages_filled, by = c(&quot;village_id&quot;)) %&gt;% st_drop_geometry() %&gt;% select(-geometry) # add to village_sewer_blocks village_sewer_blocks &lt;- left_join(village_sewer_blocks, village_sewer_b, by = c(&quot;b_row_id&quot;) ) # group by village and dissolve # first we buffer village_sewer_blocks &lt;- village_sewer_blocks %&gt;% st_as_sf() %&gt;% st_buffer(100) # then dissolve village_sewer_blocks &lt;- village_sewer_blocks %&gt;% group_by(NAME) %&gt;% summarise() %&gt;% ungroup() # remove the buffer distance village_sewer_blocks &lt;- village_sewer_blocks %&gt;% st_buffer(-100) ## repeat for towns town_sewer_b &lt;- town_sewer_b %&gt;% rename(town_id = col.id, b_row_id = row.id) %&gt;% left_join(dissolved_towns_filled, by = c(&quot;town_id&quot;)) %&gt;% st_drop_geometry() %&gt;% select(-geometry) # add to village_sewer_blocks town_sewer_blocks &lt;- left_join(town_sewer_blocks, town_sewer_b, by = c(&quot;b_row_id&quot;) ) # group by village and dissolve # first we buffer town_sewer_blocks &lt;- town_sewer_blocks %&gt;% st_as_sf() %&gt;% st_buffer(100) # then dissolve town_sewer_blocks &lt;- town_sewer_blocks %&gt;% group_by(NAME) %&gt;% summarise() %&gt;% ungroup() # remove the buffer distance town_sewer_blocks &lt;- town_sewer_blocks %&gt;% st_buffer(-100) # fill holes town_sewer_blocks_filled &lt;- nngeo::st_remove_holes(town_sewer_blocks) village_sewer_blocks_filled &lt;- nngeo::st_remove_holes(village_sewer_blocks) block_sewer_plot &lt;- ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = village_sewer_blocks_filled, color = &quot;white&quot;, aes(fill = NAME) )+ geom_sf(data = town_sewer_blocks_filled, color = &quot;white&quot;, aes(fill = NAME) )+ geom_sf(data = wwtp_onondaga_sf, size = 3, color = &quot;black&quot;)+ labs(title = &quot;Town and village blocks that intersect with\\nparcels on sewer&quot;)+ theme_void()+ theme(legend.position = &quot;none&quot;, plot.title = element_text(hjust = 0.5)) # block_sewer_plot So now we have two sets of data to bring to the local planning offices or WWTP operators to help in creating the final boundaries. Lets take a look at them side by side. gridExtra::grid.arrange(sewer_parcel_plot, block_sewer_plot, nrow = 1) We can also link these data to the nearest WWTP like we did for parcels. # combine into one object village_town_blocks &lt;- bind_rows(town_sewer_blocks, village_sewer_blocks) # assign each polygon to a point based on proximity near &lt;- st_nearest_feature(village_town_blocks, wwtp_onondaga_sf) # using the rownumbers for the nearest feature, we can begin to create some # sewershed boundaries wwtp_onondaga_sf$wwtp_row_id &lt;- seq(1:nrow(wwtp_onondaga_sf)) village_town_blocks$parcel_row_id &lt;- seq(1:nrow(village_town_blocks)) # combine the list of near wwtps with the onondaga sewer dataset near_df &lt;- as.data.frame(cbind(village_town_blocks, near)) # rename near value to be the wwtp_row_id near_df$wwtp_row_id &lt;- near_df$near # to avoid extra &quot;lines&quot; in our dissolved polygons, we buffer the parcels first # first we buffer dissolved &lt;- near_df %&gt;% st_as_sf() %&gt;% st_buffer(10) # then dissolve dissolved &lt;- dissolved %&gt;% group_by(wwtp_row_id) %&gt;% summarise() %&gt;% ungroup() # remove the buffer distance dissolved &lt;- dissolved %&gt;% st_buffer(-10) # add the wwtp metadata onondaga_meta &lt;- wwtp_onondaga_sf %&gt;% st_drop_geometry() dissolved &lt;- dissolved %&gt;% left_join(onondaga_meta, by = c(&quot;wwtp_row_id&quot;)) # plot to see how they look ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = dissolved, color = &quot;darkblue&quot;, aes(fill = `Facility.Name`))+ geom_sf(data = wwtp_onondaga_sf, size = 3, color = &quot;black&quot;)+ theme_void()+ theme(legend.position = &quot;none&quot;) 3.5.3 Appendix 3 - Polygons from point data Some datasets may be made up of points like manhole locations or points for each parcel connected to a sewer system. You can create a polygon from point data using the following code. # change parcels to centroids onondaga_sewer_centroids &lt;- st_centroid(onondaga_sewer) # find the nearest wwtp for each sewer parcel near &lt;- st_nearest_feature(onondaga_sewer_centroids, wwtp_onondaga_sf) # using the row numbers for the nearest feature, we can begin to create some # sewershed boundaries wwtp_onondaga_sf$wwtp_row_id &lt;- seq(1:nrow(wwtp_onondaga_sf)) onondaga_sewer_centroids$parcel_row_id &lt;- seq(1:nrow(onondaga_sewer_centroids)) # combine the list of near wwtps with the Onondaga sewer dataset near_df &lt;- as.data.frame(cbind(onondaga_sewer_centroids, near)) # rename near value to be the wwtp_row_id near_df$wwtp_row_id &lt;- near_df$near # plot the points ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = st_as_sf(near_df), alpha = 0.5)+ theme_void() # make a buffer around each point near_df &lt;- near_df %&gt;% st_as_sf() %&gt;% st_buffer(dist = 100) # you might need to play with this buffer distance # group by wwtp_row_id and merge into polygons # then dissolve dissolved &lt;- near_df %&gt;% group_by(wwtp_row_id) %&gt;% summarise() %&gt;% ungroup() # plot ggplot()+ geom_sf(data = onondaga_border, fill = NA)+ geom_sf(data = dissolved, aes(fill = as.factor(wwtp_row_id)))+ geom_sf(data = wwtp_onondaga_sf, aes(size = `Average.Design.Hydraulic.Flow`))+ theme_void()+ theme(legend.position = &quot;none&quot;) You can then fill the holes like we did before or do some additional cleaning in ArcGIS or from the special districts tables. "],["adding-census-data-to-wastewater-based-epidemiology.html", "Chapter 4 Adding Census Data to Wastewater-Based Epidemiology 4.1 Overview 4.2 Load wastewater data 4.3 Load US Census data method - Tidy Census 4.4 Adding the Census data to the wastewater data 4.5 Training review", " Chapter 4 Adding Census Data to Wastewater-Based Epidemiology 4.1 Overview Wastewater-based epidemiology (WBE) data can be enhanced by adding other public data sources. One source is United States Census (US Census) data, which can add population demographic variables to WBE data, This vignette demonstrates how to take a spatial WBE dataset of sewershed boundaries in New York State (NYS) and add US Census data using spatial intersection methods. 4.1.1 Install and Load R packages Install packages to your computer. install.packages(&quot;dplyr&quot;) install.packages(&quot;ggplot2&quot;) install.packages(&quot;sf&quot;) install.packages(&quot;tidycensus&quot;) install.packages(&quot;units&quot;) Load packages into your R session. library(dplyr) # data wrangling library(sf) # spatial data manipulation library(ggplot2) # making plots and maps library(tidycensus) # download tabular census data library(tigris) # download spatial census data library(tidyr) # data wrangling library(units) # handling variables with unit assignment 4.2 Load wastewater data Sewershed boundaries for NYS can be downloaded from ArcGIS online. # load the boundaries sewersheds &lt;- st_read(&quot;data/New York State Sewersheds/New York State Sewersheds.shp&quot;) # select the variables we want to keep sewersheds &lt;- sewersheds %&gt;% dplyr::select(County, City, WWTP_ID, WWTP, Sewershed, SW_ID, geometry) Map your data. # plot to view the data ggplot()+ geom_sf(data = sewersheds, fill = &quot;white&quot;, color = &quot;black&quot;)+ theme_void() 4.3 Load US Census data method - Tidy Census US Census data can be added to your R session using the packages tidycensus and tigris. Both packages connect to the US Census API for downloading tabular data or spatial boundaries. You will need an API key to access the data. For information on obtaining a key, visit the tidycensus website. # retrieve your API key if stored in the environment census_api_key(Sys.getenv(&#39;CENSUS_API_KEY&#39;)) For this example, we are going to download 2020 decennial census data and calculate the total number of individuals that self-identify as black or African American from that year. We will calculate totals and percentage of total population. We are going to use census tracts as our geography. To download the data, we need to know the name of the variables we want and for that, we use the load_variables command. # load the variable names into an R object. cache = TRUE can speed the data download step in the next portion census_var_names &lt;- load_variables(year = 2020, dataset = &quot;pl&quot;, cache = TRUE) # look at the first few rows of data head(census_var_names) ## # A tibble: 6 x 3 ## name label concept ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 H1_001N &quot; !!Total:&quot; OCCUPANCY STATUS ## 2 H1_002N &quot; !!Total:!!Occupied&quot; OCCUPANCY STATUS ## 3 H1_003N &quot; !!Total:!!Vacant&quot; OCCUPANCY STATUS ## 4 P1_001N &quot; !!Total:&quot; RACE ## 5 P1_002N &quot; !!Total:!!Population of one race:&quot; RACE ## 6 P1_003N &quot; !!Total:!!Population of one race:!!White alone&quot; RACE This function can load the variable names for many datasets from the US Census and provides the name, the variable description, and the concept group that the variable is part of. Looking at the options, we can see that we want a variable from the RACE concept, specifically, P1_004N, which is !!Total:!!Population of one race:!!Black or African American alone. For this exercise, we will not be included those that identify as multiple racial or ethnic groups, but you can adapt the methods presented to make those calculations. To get the total for each census tract that identify as black or African American, we need this variable. However, to calculate the percent of the population, we also need the total population, which is the variable  !!Total: or P1_001N. We will use the get_dencennial function to download the data into our R session. # download the decennial data for the tract geography for NYS census_data &lt;- get_decennial( year = 2020, geography = &quot;tract&quot;, state = &quot;New York&quot;, variables = c( c(population_total = &quot;P1_001N&quot;), black_alone = &quot;P1_004N&quot; ) ) # view the first few rows of data head(census_data) ## # A tibble: 6 x 4 ## GEOID NAME variable value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 36001000100 Census Tract 1, Albany County, New York population_total 2073 ## 2 36001000201 Census Tract 2.01, Albany County, New York population_total 3125 ## 3 36001000202 Census Tract 2.02, Albany County, New York population_total 2598 ## 4 36001000301 Census Tract 3.01, Albany County, New York population_total 3190 ## 5 36001000302 Census Tract 3.02, Albany County, New York population_total 3496 ## 6 36001000401 Census Tract 4.01, Albany County, New York population_total 2216 The resulting dataset is now in our R session with 10,822 rows. We will need to pivot the dataframe to a wider format because it placed the variables in a long format. # pivot the data from long to wide format census_data &lt;- pivot_wider(census_data, names_from = variable) # summary of the dataset variables summary(census_data) ## GEOID NAME population_total black_alone ## Length:5411 Length:5411 Min. : 0 Min. : 0.0 ## Class :character Class :character 1st Qu.: 2490 1st Qu.: 47.5 ## Mode :character Mode :character Median : 3578 Median : 164.0 ## Mean : 3733 Mean : 551.9 ## 3rd Qu.: 4762 3rd Qu.: 667.0 ## Max. :17222 Max. :7935.0 Now we have census counts for individuals that self-identify as black or African American and we want to add these data to our wastewater sewershed boundaries. To do this, we need to add the census geometry (the spatial component) to the R session. # download tracts for NY for 2020 and drop the name column tracts &lt;- tracts(state = &quot;New York&quot;, year = 2020) %&gt;% select(-NAME) # join the tract geometries to the census data census_data_sf &lt;- left_join(tracts, census_data, by = c(&quot;GEOID&quot;)) # check the data structure str(census_data_sf) ## Classes &#39;sf&#39; and &#39;data.frame&#39;: 5411 obs. of 15 variables: ## $ STATEFP : chr &quot;36&quot; &quot;36&quot; &quot;36&quot; &quot;36&quot; ... ## $ COUNTYFP : chr &quot;047&quot; &quot;047&quot; &quot;047&quot; &quot;047&quot; ... ## $ TRACTCE : chr &quot;000700&quot; &quot;000900&quot; &quot;001100&quot; &quot;001300&quot; ... ## $ GEOID : chr &quot;36047000700&quot; &quot;36047000900&quot; &quot;36047001100&quot; &quot;36047001300&quot; ... ## $ NAMELSAD : chr &quot;Census Tract 7&quot; &quot;Census Tract 9&quot; &quot;Census Tract 11&quot; &quot;Census Tract 13&quot; ... ## $ MTFCC : chr &quot;G5020&quot; &quot;G5020&quot; &quot;G5020&quot; &quot;G5020&quot; ... ## $ FUNCSTAT : chr &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; ... ## $ ALAND : num 176774 163469 168507 293167 154138 ... ## $ AWATER : num 0 0 0 0 0 ... ## $ INTPTLAT : chr &quot;+40.6923505&quot; &quot;+40.6917206&quot; &quot;+40.6932903&quot; &quot;+40.6976150&quot; ... ## $ INTPTLON : chr &quot;-073.9973434&quot; &quot;-073.9916018&quot; &quot;-073.9877087&quot; &quot;-073.9883586&quot; ... ## $ NAME : chr &quot;Census Tract 7, Kings County, New York&quot; &quot;Census Tract 9, Kings County, New York&quot; &quot;Census Tract 11, Kings County, New York&quot; &quot;Census Tract 13, Kings County, New York&quot; ... ## $ population_total: num 4415 5167 1578 2465 1694 ... ## $ black_alone : num 151 197 178 234 172 ... ## $ geometry :sfc_MULTIPOLYGON of length 5411; first list element: List of 1 ## ..$ :List of 1 ## .. ..$ : num [1:35, 1:2] -74 -74 -74 -74 -74 ... ## ..- attr(*, &quot;class&quot;)= chr [1:3] &quot;XY&quot; &quot;MULTIPOLYGON&quot; &quot;sfg&quot; ## - attr(*, &quot;sf_column&quot;)= chr &quot;geometry&quot; ## - attr(*, &quot;agr&quot;)= Factor w/ 3 levels &quot;constant&quot;,&quot;aggregate&quot;,..: NA NA NA NA NA NA NA NA NA NA ... ## ..- attr(*, &quot;names&quot;)= chr [1:14] &quot;STATEFP&quot; &quot;COUNTYFP&quot; &quot;TRACTCE&quot; &quot;GEOID&quot; ... 4.4 Adding the Census data to the wastewater data 4.4.1 Spatial transformations To add our population data to the sewershed data, we have a few steps to complete. First, both of our datasets need to be the same spatial projection so that they spatially overlap and can be mapped on top of each other. # transform the census data CRS to match the sewersheds census_data_sf &lt;- st_transform(census_data_sf, st_crs(sewersheds)) # plot the data, the layers should overlap ggplot()+ geom_sf(data = census_data_sf, fill = &quot;white&quot;, color = &quot;black&quot;)+ geom_sf(data = sewersheds, fill = &quot;blue&quot;, color = &quot;black&quot;)+ theme_void() 4.4.2 Spatial intersection Now we want to spatially intersect the data. This will assign census count data to the sewersheds that overlap. Sewershed boundaries do not follow census tract boundaries closely, so we have two options for assigning the data. First, we can apportion census data to the sewersheds using the proportion of each census tract area that is within the sewershed area. Alternatively, we can assign the total population for all intersecting tracts to the sewershed. The first method, called areal apportionment, is generally thought to provide more accurate methods for counts of the data, but assumes that people are evenly distributed within the census tract. The second method could be useful if it is not known how evenly the population is distributed and you want to avoid excluding anyone. We will practice both methods. 4.4.2.1 Areal apportionment # calculate the area of each census tract. Note this field becomes a unit # variable, we will have to drop those later census_data_sf$tract_area &lt;- st_area(census_data_sf) # turn of spherical geometry to handle overlapping edges and invalid vertices # warnings sf::sf_use_s2(FALSE) # intersect both datasets, creating a new dataset that has slivers of each tract # that intersects a sewershed intersection &lt;- st_intersection(sewersheds, census_data_sf) summary(intersection) ## County City WWTP_ID WWTP ## Length:7963 Length:7963 Length:7963 Length:7963 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## Sewershed SW_ID STATEFP COUNTYFP ## Length:7963 Length:7963 Length:7963 Length:7963 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## TRACTCE GEOID NAMELSAD MTFCC ## Length:7963 Length:7963 Length:7963 Length:7963 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## FUNCSTAT ALAND AWATER INTPTLAT ## Length:7963 Min. :0.000e+00 Min. :0.000e+00 Length:7963 ## Class :character 1st Qu.:2.136e+05 1st Qu.:0.000e+00 Class :character ## Mode :character Median :1.176e+06 Median :0.000e+00 Mode :character ## Mean :1.933e+07 Mean :2.107e+06 ## 3rd Qu.:6.154e+06 3rd Qu.:1.536e+05 ## Max. :1.828e+09 Max. :1.997e+09 ## INTPTLON NAME population_total black_alone ## Length:7963 Length:7963 Min. : 0 Min. : 0.0 ## Class :character Class :character 1st Qu.: 2593 1st Qu.: 61.0 ## Mode :character Mode :character Median : 3672 Median : 211.0 ## Mean : 3803 Mean : 587.3 ## 3rd Qu.: 4824 3rd Qu.: 734.5 ## Max. :17222 Max. :7935.0 ## tract_area geometry ## Min. :2.169e+04 GEOMETRYCOLLECTION: 28 ## 1st Qu.:2.261e+05 MULTIPOLYGON :1583 ## Median :1.277e+06 POLYGON :6352 ## Mean :2.140e+07 epsg:4269 : 0 ## 3rd Qu.:6.565e+06 +proj=long... : 0 ## Max. :1.993e+09 Our spatial data are now combined into one spatial data object. # calculate a new area for each sliver intersection$sliver_area &lt;- st_area(intersection) # calculate the proportion of area that each sliver occupies in the sewershed intersection$prop_area &lt;- intersection$sliver_area / intersection$tract_area summary(intersection$prop_area) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.00000 0.06113 0.88439 0.60984 1.00122 1.00216 # You will notice some areas are slightly over 1 representing a rounding error. Let&#39;s make those all 1 to avoid assignment issues # drop units intersection$prop_area &lt;- drop_units(intersection$prop_area) intersection$prop_area &lt;- ifelse(intersection$prop_area &gt; 1, 1, intersection$prop_area ) summary(intersection$prop_area) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.00000 0.06113 0.88439 0.60930 1.00000 1.00000 # multiply the proportional area by the totals for black or African American and total population to get proportional values intersection$prop_black &lt;- intersection$prop_area * intersection$black_alone intersection$prop_population &lt;- intersection$prop_area * intersection$population_total # how we will group the data by sewershed and sum the total population and total black population in each sewershed intersection_final &lt;- intersection %&gt;% group_by(County, City, WWTP_ID, WWTP, Sewershed, SW_ID) %&gt;% summarize(sum_black_alone = sum(prop_black, na.rm = TRUE), sum_total_population = sum(prop_population) ) %&gt;% ungroup() # our resulting dataset has 674 rows, one for each sewershed, and proportional estimates for population totals and the total number of individuals that self identify as black or African American summary(intersection_final) ## County City WWTP_ID WWTP ## Length:674 Length:674 Length:674 Length:674 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## Sewershed SW_ID sum_black_alone sum_total_population ## Length:674 Length:674 Min. : 0.00 Min. : 0.2 ## Class :character Class :character 1st Qu.: 0.74 1st Qu.: 66.6 ## Mode :character Mode :character Median : 12.91 Median : 595.6 ## Mean : 4932.45 Mean : 27214.5 ## 3rd Qu.: 381.10 3rd Qu.: 7356.8 ## Max. :307461.96 Max. :1154606.8 ## geometry ## GEOMETRYCOLLECTION: 2 ## MULTIPOLYGON :160 ## POLYGON :512 ## epsg:4269 : 0 ## +proj=long... : 0 ## We have estimated totals, which can be useful, but often, percentage of the population is more informative for analyses. We can get an estimated proportion of the population by dividing the total black alone variable by the total population value.Also, you will notice that the values are no longer integers, meaning that there are estimates for total number of people that include decimals. These can be rounded to the nearest whole number to return the data back to integers. # calculate the proportion intersection_final$prop_black &lt;- intersection_final$sum_black_alone / intersection_final$sum_total_population # plot the percentages ggplot()+ geom_sf(data = intersection_final, aes(fill = prop_black), color = &quot;black&quot;)+ theme_void() 4.4.2.2 Intersection assignment The other method for assigning data is to assign the total population for all census tracts that intersect with a sewershed. # st_intersects returns a list of the polygon rows that intersect from each # object intersect_list &lt;- st_intersects(sewersheds, census_data_sf) # make it a dataframe intersect_df &lt;- as.data.frame(intersect_list) # view the top view rows head(intersect_df) ## row.id col.id ## 1 1 1142 ## 2 1 1145 ## 3 1 1146 ## 4 1 2664 ## 5 1 3692 ## 6 1 5333 Column 1 are the row ids for the sewersheds and column 2 are the row ids for the tracts that intersect them. We will add the row ids to each data object, then use those to merge the census counts to the spatial data and sum to totals. # add row ids sewersheds$sewer_row_id &lt;- as.integer(rownames(sewersheds)) census_data_sf$census_row_id &lt;- as.integer(rownames(census_data_sf)) # rename intersect column and merge to spatial sewersheds colnames(intersect_df) &lt;- c(&quot;sewer_row_id&quot;, &quot;census_row_id&quot;) intersect_combined &lt;- full_join(sewersheds, intersect_df, by = c(&quot;sewer_row_id&quot;) ) # change the census data from a spatial object to a dataframe census_data_df &lt;- st_drop_geometry(census_data_sf) # merge census data -&gt; note that we have to remove the spatial data from the # census data intersect_combined &lt;- left_join(intersect_combined, census_data_df, by = c(&quot;census_row_id&quot;) ) # sum the total number of people that are in census tracts intersecting each # sewershed intersect_final &lt;- intersect_combined%&gt;% group_by(County, City, WWTP_ID, WWTP, Sewershed, SW_ID) %&gt;% summarize(sum_black_alone = sum(black_alone, na.rm = TRUE), sum_total_population = sum(population_total, na.rm = TRUE) ) %&gt;% ungroup() # calculate the proportions intersect_final$prop_black &lt;- intersect_final$sum_black_alone / intersect_final$sum_total_population # make a map ggplot()+ geom_sf(data = intersect_final, aes(fill = prop_black), color = &quot;black&quot;)+ theme_void() 4.5 Training review This tutorial demonstrated a process for adding US Census data to WBE spatial data (sewersheds). We calculated the percentage of each sewershed population that identified as black or African American in the 2020 decennial census. These methods can be used to estimate other data available from the US Census. For more information visit the US Census website or tidycensus. "],["adding-other-spatial-data-to-wbe.html", "Chapter 5 Adding other spatial data to WBE 5.1 Overview 5.2 Training review", " Chapter 5 Adding other spatial data to WBE 5.1 Overview In this training, you will link zip code boundaries to sewersheds. 5.1.0.1 Data you will need for this training New York State Sewershed boundaries 5.1.1 Install and Load R packages Install packages install.packages(&quot;dplyr&quot;) install.packages(&quot;ggplot2&quot;) install.packages(&quot;sf&quot;) install.packages(&quot;tigris&quot;) install.packages(&quot;units&quot;) Load packages into your current R session. library(ggplot2) library(tigris) library(sf) library(dplyr) 5.1.2 Load data into R # sewershed boundaries for NYS ny_sewersheds &lt;- st_read(&quot;data/New York State Sewersheds/New York State Sewersheds.shp&quot;) ny_zips &lt;- zctas(state = &quot;New York&quot;, year = 2010) 5.1.3 Intersect zip code TAs with sewersheds # Sewershed boundaries - spatial data # # Sewersheds need to remove upstream ny_sewersheds &lt;- ny_sewersheds %&gt;% filter(Method == &quot;Influent&quot;) # there are overlapping sewersheds, so the geometry needs to be made valid ny_sewersheds &lt;- st_make_valid(ny_sewersheds) # spatial transform the county data ny_zips &lt;- st_transform(ny_zips, st_crs(ny_sewersheds)) # intersect the datasets intersection &lt;- st_intersects(ny_zips, ny_sewersheds) # the result is a list object of each zip code and what row from the sewershed # object the zip code matches with # make it a dataframe intersection &lt;- as.data.frame(intersection) # the first column are the rows for the zip codes # the second column are the rows for the sewersheds # add row ids to each object so we can make a table for each zip code and what # sewershed it intersects with ny_sewersheds$sewer_row_id &lt;- seq(1:nrow(ny_sewersheds)) ny_zips$zip_row_id &lt;- seq(1:nrow(ny_zips)) # rename the columns in the intersection object intersection &lt;- intersection %&gt;% rename(zip_row_id = row.id, sewer_row_id = col.id) # merge the intersection object with the zip code object ny_zips_merge &lt;- left_join(ny_zips, intersection, by = c(&quot;zip_row_id&quot;)) # add the sewershed identifying information sewer_id_list &lt;- ny_sewersheds %&gt;% st_drop_geometry() %&gt;% select(SW_ID, sewer_row_id) # merge to the zip code object ny_zips_merge &lt;- left_join(ny_zips_merge, sewer_id_list, by = c(&quot;sewer_row_id&quot;)) # add sewer indicator ny_zips_merge$sewer_yn &lt;- ifelse(is.na(ny_zips_merge$SW_ID), &quot;No&quot;, &quot;Yes&quot;) # make a table that could be exported ny_zip_table &lt;- ny_zips_merge %&gt;% select(ZCTA5CE10, sewer_yn, SW_ID) %&gt;% rename(zip_code = ZCTA5CE10) %&gt;% st_drop_geometry() # map the zip codes indicating if they intersect with a sewershed or not ggplot()+ geom_sf(data = ny_zips_merge, aes(fill = sewer_yn), color = &quot;white&quot;)+ theme_void()+ theme(legend.position = &quot;bottom&quot;)+ labs(title = &quot;NY Zip codes that are on sewer&quot;)+ scale_fill_manual(values = c(&quot;Yes&quot; = &quot;dodgerblue&quot;, &quot;No&quot; = &quot;darkred&quot;)) head(ny_zip_table) ## zip_code sewer_yn SW_ID ## 1 12205 Yes 36001NY0026875ACWWL ## 2 12205 Yes 36001NY0027758ACWWM ## 3 12009 Yes 36001NY0031534ACWWD ## 4 12009 Yes 36001NY0022217ACWWE ## 5 12009 Yes 36001NY0022225ACWWF ## 6 14804 No &lt;NA&gt; 5.2 Training review This data file can then be used to link other zip code level data to sewersheds. If a zip code intersects with a sewershed, then residents of that zip code likely live on or near the sewer system. "],["system-design-for-outbreak-detection.html", "Chapter 6 System design for outbreak detection 6.1 Where does wastewater surveillance fit into the surveillance landscape? 6.2 Estimating sensitivity of detection 6.3 Equity of outbreak detection 6.4 Example: Polio outbreak in NYS 6.5 Considerations for designing wastewater surveillance systems for outbreak detection 6.6 Conclusion and training review 6.7 References", " Chapter 6 System design for outbreak detection In this training, you will learn the key principles of outbreak detection in epidemiology surveillance systems. Examples will be provided to explore the principles. At the end, key concepts will be reviewed. 6.1 Where does wastewater surveillance fit into the surveillance landscape? Wastewater surveillance is monitoring community level samples from points that include influent from different sources like homes, businesses, and hospitals. Wastewater surveillance is ideal for identifying if a disease is present and if there is an increase in cases (Figure 1). Figure 6.1: The domains of disease surveillance. Wastewater surveillance fits into identifying individuals infected and communities (Cameron et al. 2020). Probability of detecting a disease is dependent on the sensitivity of detection for that specific disease (Equation 6.1) and also on the coverage of the population by the surveillance system (Equation 6.2) (Cameron et al. 2020). (6.1) \\[\\begin{equation} \\ Probability(at \\ least \\ one \\ detected) = 1  (1  Sensitivity \\ of \\ detection)^n \\tag{6.1} \\end{equation}\\] (6.1) \\[\\begin{equation} \\ EDSSe = population \\ coverage * temporal \\ coverage * Sensitivity \\ of \\ detection \\tag{6.1} \\end{equation}\\] It is important to know that wastewater surveillance has limitations and will not detect the spillover event (e.g., the introduction of a new pathogen from one population to another). As an outbreak spreads, the sensitivity of detecting the outbreak increases exponentially as infection counts increase. Wastewater surveillance has a high population coverage within treatment plant catchment areas because urban areas are more likely to be served by public sewer systems. Frequent wastewater surveillance (e.g., once per week) has high temporal coverage. Also, remember, sensitivity will always be pathogen specific. 6.2 Estimating sensitivity of detection There are two ways to estimate the sensitivity of detection of a pathogen in wastewater. One is comparing detections to estimates of prevalence (See Larsen et al. for more details). The second is a dynamic shedding, decay, and transport model. This is dependent on being able to measure or estimate the shedding of a pathogen from an infected person and is hard to measure for rare pathogens (e.g., measles or polio). 6.3 Equity of outbreak detection Urban communities are more likely to be connected to sewer than rural communities. While this means that the urban vulnerable populations (e.g., poor, elderly) are covered by the surveillance system, the population density of the community means that the wastewater flow is highly diluted. The more people that contribute to a sewer system, the higher the flow, and the more dilution. This reduces the sensitivity of detection at the treatment plan. This means that urban communities may experience higher infection counts before an outbreak is detected in wastewater. On the other hand, rural communities with a public sewer system are more likely to detect an outbreak that is small in size and in the early stages because the population is smaller and therefore the ability to detect the pathogen is greater. There is less dilution in the smaller systems because fewer households and businesses contribute to the smaller treatment plant. 6.4 Example: Polio outbreak in NYS Polio was identified in wastewater in New York State after diagnosis of a paralytic case in 2022 (Link-Gelles et al. 2022). Continuous monitoring for polio in wastewater after this diagnosis identified polio positives in several community wastewater samples in the nearby region (Ryerson et al. 2022). You can learn more about the polio outbreak in New York here. Figure 6.2: Polio positive detection rates for NYS during the 2022 polio outbreak (Larsen et al. 2024) Using the detection of polio in wastewater and methods developed by Berchenko et al. (2017), estimates for the sensitivity to detect a single poliovirus infection were produced for each wastewater sampling site in New York (Figure 3A). Figure 6.3: A) Sensitivity to detect a single poliovirus infection at one treatment plant. Sensitivity is highest in smaller treatment plants. B) confidence in freedom from poliovirus transmission after three consecutive non-detections. C) the 95% confidence in the upper limit of infections. Even if a result is negative, we are confident that the total number of infections is less than 25 for most WWTPs. 6.5 Considerations for designing wastewater surveillance systems for outbreak detection When designing your surveillance system, you need to consider many different components including: Detection of an outbreak is determined by the stage of the outbreak, the size of the treatment plant, and the shedding characteristics of the pathogen Outbreaks might be first detected in the wastewater of smaller treatment plants. Non-detections in larger treatment plants does not mean wastewater surveillance is not beneficial Large treatment plants benefit from upstream sampling plans and readiness 6.6 Conclusion and training review Wastewater surveillance is a powerful tool for public health. It can help is understand emerging pathogens and monitor endemic diseases. There are limitations to all surveillance systems, including wastewater surveillance. Based on our knowledge today, one limit is the sensitivity to detect a pathogen in wastewater. This will depend on the size of the outbreak, its shedding profile, and the sampling location characteristics. Wastewater surveillance is best used to monitor the growth or change in an outbreak and by including small treatment plants close to urban areas as sentinel surveillance sites, there is potential to identify an outbreak before it becomes a major public health problem. 6.7 References Berchenko Y, Manor Y, Freedman LS, Kaliner E, Grotto I, Mendelson E, et al. Estimation of polio infection prevalence from environmental surveillance data. Sci Transl Med. 2017; 9. https://doi.org/10.1126/scitranslmed.aaf6786 PMID: 28356510 Cameron AR, Meyer A, Faverjon C, Mackenzie C. Quantification of the sensitivity of early detection surveillance. Transboundary and Emerging Diseases. 2020 Nov;67(6):2532-43. Larsen DA, Hill D, Zhu Y, Alazawi M, Chatila D, Dunham C, Faruolo C, Ferro B, Godinez A, Hanson B, Insaf T. Non-detection of emerging and re-emerging pathogens in wastewater surveillance to confirm absence of transmission risk: A case study of polio in New York. PLOS global public health. 2024 Dec 31;4(12):e0002381. Link-Gelles R, Lutterloh E, Schnabel Ruppert P, et al. Public Health Response to a Case of Paralytic Poliomyelitis in an Unvaccinated Person and Detection of Poliovirus in Wastewater  New York, JuneAugust 2022. MMWR Morb Mortal Wkly Rep 2022;71:1065-1068. DOI: http://dx.doi.org/10.15585/mmwr.mm7133e2 Ryerson AB, Lang D, Alazawi MA, et al. Wastewater Testing and Detection of Poliovirus Type 2 Genetically Linked to Virus Isolated from a Paralytic Polio Case  New York, March 9October 11, 2022. MMWR Morb Mortal Wkly Rep 2022;71:14181424. DOI: http://dx.doi.org/10.15585/mmwr.mm7144e2 "],["resources-and-links.html", "Chapter 7 Resources and links 7.1 Training Videos 7.2 Data 7.3 Other Resources", " Chapter 7 Resources and links 7.1 Training Videos The videos will be available on our public YouTube channel. They are coming soon! 7.2 Data All the data used in these tutorials are publicly available at the following links: Systems Design GitHub Page. Click on the data folder. NYS sewershed data (ArcGIS online download). Access and download NYS sewershed data to see how data are recorded. NYS sewershed data (GitHub data download). Access and download NYS sewershed data directly into your R session. National parcel data viewer / data access portal. This is a data portal that lets you explore each state in the US and whether they have tax parcel data. Some links bring you to county or state websites and from there you can view and download the data. 7.3 Other Resources NYS sewershed data viewer. Visually inspect NYS sewersheds and the population served by each. The page includes example code for downloading and adding population data to sewershed shapefiles in the program R. Using the Editor toolbar in ArcGIS. ArcGIS can be an excellent way to digitally edit spatial data. R spatial tools. R is an open-source program, and most mapping projects and analyses can be completed using the software. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
